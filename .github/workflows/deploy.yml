name: CI/CD to EKS via Argo CD

on:
  push:
    paths:
      - datadog-crawler/**
      - news-frontend/**
      - news-consumer/**
    branches: [main]

env:
  ECR_REGISTRY: 269622523990.dkr.ecr.ap-northeast-2.amazonaws.com
  IMAGE_NAME: datadog-news-crawler
  IMAGE_NAME_FRONTEND: news-frontend
  IMAGE_NAME_CONSUMER: news-consumer
  ACTIONS_STEP_DEBUG: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG as short SHA
        id: tag
        run: echo "image_tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

  build-backend:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Login to Amazon ECR
        run: aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and push backend image
        run: |
          docker buildx create --use || true
          docker buildx build \
            --platform linux/arm64 \
            -t $ECR_REGISTRY/$IMAGE_NAME:${{ needs.setup.outputs.image_tag }} \
            --push ./datadog-crawler

  build-consumer:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Login to Amazon ECR
        run: aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and push consumer image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            -t $ECR_REGISTRY/$IMAGE_NAME_CONSUMER:${{ needs.setup.outputs.image_tag }} \
            --push ./news-consumer

  build-frontend:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Login to Amazon ECR
        run: aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and push frontend image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            -t $ECR_REGISTRY/$IMAGE_NAME_FRONTEND:${{ needs.setup.outputs.image_tag }} \
            --push ./news-frontend

  update-deployments:
    runs-on: ubuntu-latest
    needs: [build-backend, build-consumer, build-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Update manifests with new image tags
        run: |
          IMAGE_TAG=${{ needs.setup.outputs.image_tag }}
          sed -i "s|\(image: $ECR_REGISTRY/$IMAGE_NAME:\).*|image: $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG|" ./eks_resources/k8s/deployment.yaml
          sed -i "s|\(image: $ECR_REGISTRY/$IMAGE_NAME_FRONTEND:\).*|image: $ECR_REGISTRY/$IMAGE_NAME_FRONTEND:$IMAGE_TAG|" ./eks_resources/k8s/deployment.yaml
          sed -i "s|\(image: $ECR_REGISTRY/$IMAGE_NAME_CONSUMER:\).*|image: $ECR_REGISTRY/$IMAGE_NAME_CONSUMER:$IMAGE_TAG|" ./eks_resources/k8s/consumer-summary.yaml

      - name: Commit and push updated deployment manifests
        run: |
          git config user.name "github-actions"
          git config user.email "ci@github.com"
          git add ./eks_resources/k8s/*.yaml
          git commit -m "Update image tags to $IMAGE_TAG"
          git push
