services:
  backend:
    build:
      context: ./datadog-crawler
      cache_from:
        - bitsfeed-backend:latest
    container_name: datadog-crawler
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DD_AGENT_HOST=datadog-agent
      - DD_ENV=dev
      - DD_SERVICE=datadog-crawler
      - DD_VERSION=1.0.0
      - DD_LOGS_INJECTION=true
      - DD_PROFILING_ENABLED=true
      - DATADOG_TRACE_ENABLED=true
      - DD_APPSEC_ENABLED=true
      - DD_GIT_REPOSITORY_URL="github.com/jungyoungseok/bitsfeed
      - DD_IAST_ENABLED=true
      - DD_APPSEC_SCA_ENABLED=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DD_DATA_STREAMS_ENABLED=true
      - DD_EXCEPTION_REPLAY_ENABLED=true
    networks:
      - bitsfeed-net
    depends_on:
      - datadog

  # ðŸš€ ìƒˆë¡œìš´ Analytics ì„œë¹„ìŠ¤
  analytics:
    build:
      context: ./datadog-analytics
      cache_from:
        - bitsfeed-analytics:latest
    container_name: datadog-analytics
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - MONGO_URI=mongodb://mongo:27017
      - DD_AGENT_HOST=datadog-agent
      - DD_ENV=dev
      - DD_SERVICE=datadog-analytics
      - DD_VERSION=1.0.0
      - DD_LOGS_INJECTION=true
      - DD_PROFILING_ENABLED=true
      - DATADOG_TRACE_ENABLED=true
      - DD_APPSEC_ENABLED=true
      - DD_GIT_REPOSITORY_URL="github.com/jungyoungseok/bitsfeed
      - DD_IAST_ENABLED=true
      - DD_APPSEC_SCA_ENABLED=true
      - DD_EXCEPTION_REPLAY_ENABLED=true
    networks:
      - bitsfeed-net
    depends_on:
      - mongo

  news-consumer:
    build:
      context: ./news-consumer
      cache_from:
        - bitsfeed-news-consumer:latest
    container_name: news-consumer
    ports:
      - "8002:8002"
    depends_on:
      - kafka
      - mongo
    environment:
      - PYTHONUNBUFFERED=1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MONGO_URI=mongodb://mongo:27017
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - bitsfeed-net


  frontend:
    build:
      context: ./news-frontend
      cache_from:
        - bitsfeed-frontend:latest
    container_name: datadog-ui
    ports:
      - "3000:3000"
    environment:
      - NEWS_API_URL=http://datadog-crawler:8000
      - ANALYTICS_API_URL=http://datadog-analytics:8001
      - CONSUMER_API_URL=http://news-consumer:8002
      - DOTNET_API_URL=http://dotnet-sample:5000
      - MONGO_URI=mongodb://mongo:27017
    networks:
      - bitsfeed-net
    depends_on:
      - backend
      - analytics
      - dotnet-sample

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - bitsfeed-net
    volumes:
      - mongo-data:/data/db
    tmpfs:
      - /data/db/journal

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - bitsfeed-net  

  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_LOG4J_ROOT_LOGLEVEL=WARN
      - KAFKA_LOG4J_LOGGERS=kafka.controller=WARN,kafka.producer.async.DefaultEventHandler=WARN,state.change.logger=WARN

    networks:
      - bitsfeed-net
    depends_on:
      - zookeeper

  datadog:
    image: gcr.io/datadoghq/agent:latest
    container_name: datadog-agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_HOSTNAME=bitsfeed-local
      - DD_ENV=dev
      - DD_SERVICE=bitsfeed-api
      - DD_LOG_LEVEL=ERROR
    ports:
      - "8126:8126"     # APM
      - "8125:8125/udp" # DogStatsD
    networks:
      - bitsfeed-net

  # ðŸ”§ MySQL Database for .NET Sample
  mysql:
    image: mysql:8.0
    container_name: mysql-dotnet
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=dotnet_sample
      - MYSQL_USER=dotnetuser
      - MYSQL_PASSWORD=password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - bitsfeed-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # ðŸš€ .NET Core 8 Sample API
  dotnet-sample:
    build:
      context: ./dotnet-sample
      cache_from:
        - dotnet-sample:latest
    container_name: dotnet-sample
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Server=mysql;Database=dotnet_sample;User=root;Password=password;AllowUserVariables=True;UseAffectedRows=false;
      - DD_AGENT_HOST=datadog-agent
      - DD_ENV=dev
      - DD_SERVICE=dotnet-sample
      - DD_VERSION=1.0.0
      - DD_LOGS_INJECTION=true
      - DD_PROFILING_ENABLED=true
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_APPSEC_ENABLED=true
      - DD_TRACE_SAMPLE_RATE=1.0
      - DD_EXCEPTION_REPLAY_ENABLED=true
    networks:
      - bitsfeed-net
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  bitsfeed-net:
    driver: bridge

volumes:
  mongo-data:
  mysql-data: 