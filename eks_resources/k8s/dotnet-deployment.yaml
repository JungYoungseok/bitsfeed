apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnet-sample
  namespace: default
  labels:
    app: dotnet-sample
    tier: api
    component: dotnet-sample
    tags.datadoghq.com/service: dotnet-sample
    tags.datadoghq.com/env: production
    tags.datadoghq.com/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: dotnet-sample
  template:
    metadata:
      labels:
        app: dotnet-sample
        tier: api
        component: dotnet-sample
        tags.datadoghq.com/service: dotnet-sample
        tags.datadoghq.com/env: production
        tags.datadoghq.com/version: "1.0.0"
      annotations:
        ad.datadoghq.com/dotnet-sample.logs: '[{"source":"csharp","service":"dotnet-sample"}]'
    spec:
      serviceAccountName: default
      containers:
      - name: dotnet-sample
        image: 269622523990.dkr.ecr.ap-northeast-2.amazonaws.com/dotnet-sample:c23b9c5
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        # Application Configuration
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:5000"
        - name: UseInMemoryDatabase
          value: "false"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: dotnet-secrets
              key: connection-string
        
        # Datadog APM Configuration
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_ENV
          value: "production"
        - name: DD_SERVICE
          value: "dotnet-sample"
        - name: DD_VERSION
          value: "1.0.0"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_RUNTIME_METRICS_ENABLED
          value: "true"
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_APPSEC_ENABLED
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1.0"
        - name: DD_INSTRUMENTATION_TELEMETRY_ENABLED
          value: "true"
        - name: DD_TRACE_STARTUP_LOGS
          value: "true"
        - name: DD_TRACE_DEBUG
          value: "false"
        - name: DD_IAST_ENABLED
          value: "true"
        - name: DD_APPSEC_SCA_ENABLED
          value: "true"
        - name: DD_DATA_STREAMS_ENABLED
          value: "true"
        - name: DD_EXCEPTION_REPLAY_ENABLED
          value: "true"
        
        # Security and Performance
        - name: DOTNET_RUNNING_IN_CONTAINER
          value: "true"
        - name: DOTNET_EnableDiagnostics
          value: "0"
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /api/health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      
# MySQL dependency temporarily removed for testing
      
      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dotnet-sample
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: dotnet-sample
  namespace: default
  labels:
    app: dotnet-sample
    tier: api
    component: dotnet-sample
spec:
  selector:
    app: dotnet-sample
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dotnet-sample-hpa
  namespace: default
  labels:
    app: dotnet-sample
    component: dotnet-sample
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dotnet-sample
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max 