apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnet-sample
  namespace: default
  labels:
    app: dotnet-sample
    tier: api
    tags.datadoghq.com/service: dotnet-sample
    tags.datadoghq.com/env: production
    tags.datadoghq.com/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dotnet-sample
  template:
    metadata:
      labels:
        app: dotnet-sample
        tier: api
        tags.datadoghq.com/service: dotnet-sample
        tags.datadoghq.com/env: production
        tags.datadoghq.com/version: "1.0.0"
    spec:
      containers:
      - name: dotnet-sample
        image: dotnet-sample:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        env:
        # Datadog APM Configuration
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_ENV
          value: "production"
        - name: DD_SERVICE
          value: "dotnet-sample"
        - name: DD_VERSION
          value: "1.0.0"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_RUNTIME_METRICS_ENABLED
          value: "true"
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_APPSEC_ENABLED
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1.0"
        
        # Application Configuration
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:5000"
        - name: ConnectionStrings__DefaultConnection
          value: "Server=mysql;Database=dotnet_sample;User=root;Password=password;AllowUserVariables=True;UseAffectedRows=false;"
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
      
      # Init container to wait for MySQL
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for MySQL to be ready..."
          until nc -z mysql 3306; do
            echo "MySQL is not ready yet. Waiting..."
            sleep 2
          done
          echo "MySQL is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: dotnet-sample
  namespace: default
  labels:
    app: dotnet-sample
    tier: api
spec:
  selector:
    app: dotnet-sample
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  type: ClusterIP 